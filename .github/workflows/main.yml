name: iOS Build (No Mac Needed)

on:
  push:
    branches:
      - main

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # ✅ Install required macOS dependencies
      - name: Install Required Build Tools
        run: |
          brew install autoconf automake libtool
          brew install pkg-config libffi

      # ✅ Install required Python packages
      - name: Install Python Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip3 install Cython kivy kivy-ios sh

      - name: Clone Kivy iOS Repository
        run: |
          git clone https://github.com/kivy/kivy-ios.git
          cd kivy-ios
          git checkout master

      # ✅ Force clean build (ensures a fresh start)
      - name: Clean Previous Build Artifacts
        run: |
          cd kivy-ios
          rm -rf dist build
          mkdir -p dist build
          ls -la dist  # Debug: Check if clean

      # ✅ Build Python3 for iOS
      - name: Build Python3 for iOS
        run: |
          cd kivy-ios
          python3 toolchain.py build python3 | tee python3_build_log.txt
          echo "Checking if Python3 compiled successfully..."
          ls -la dist  # Verify Python3 was built

      # ✅ Upload logs if Python3 build fails
      - name: Upload Python3 Build Logs (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: python3-build-log
          path: kivy-ios/python3_build_log.txt

      # ✅ Verify Python3 Recipe is Compiled
      - name: Verify Python3 Compilation
        run: |
          if [ ! -d "kivy-ios/dist/python3" ]; then
            echo "❌ ERROR: Python3 was not compiled successfully!"
            ls -la kivy-ios/dist  # Show contents of dist folder
            exit 1
          else
            echo "✅ Python3 compiled successfully."
          fi

      # ✅ Build Kivy iOS dependencies
      - name: Build Kivy iOS dependencies
        run: |
          cd kivy-ios
          python3 toolchain.py build kivy | tee kivy_build_log.txt

      # ✅ Upload logs if Kivy build fails
      - name: Upload Kivy Build Logs (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-build-log
          path: kivy-ios/kivy_build_log.txt

      # ✅ Create iOS project
      - name: Create iOS project
        run: |
          cd kivy-ios
          python3 toolchain.py create visitor_app org.example.visitorapp
          echo "Checking directory structure after create..."
          ls -la  # Debugging: See if visitor_app-ios exists

      # ✅ Verify iOS project directory
      - name: Verify iOS project directory
        run: |
          if [ -d "kivy-ios/visitor_app-ios" ]; then
            echo "✅ visitor_app-ios exists, renaming to app-ios..."
            mv kivy-ios/visitor_app-ios kivy-ios/app-ios
          else
            echo "❌ ERROR: visitor_app-ios is missing! Build cannot continue."
            ls -la kivy-ios  # Show what's inside kivy-ios
            exit 1
          fi

      # ✅ Compile App for iOS
      - name: Compile App for iOS
        run: |
          cd kivy-ios/app-ios
          python3 toolchain.py build myapp

      # ✅ Package iOS app
      - name: Package iOS app
        run: |
          cd kivy-ios/app-ios
          mkdir -p output
          mv build/myapp.app output/

      # ✅ Upload Final iOS Build
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: visitor-app-ios
          path: kivy-ios/app-ios/output
